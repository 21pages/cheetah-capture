const path = require('path');
const TerserPlugin = require('terser-webpack-plugin');
const {resolve} = require('path');
const optimization = {
    minimize: false,
};
const moduleConfig = {
    rules: [
        {
            test: /\.(js|ts)$/,
            exclude: /node_modules/,
            use: {
                loader: 'babel-loader',
            },
        },
    ],
};
module.exports = [{
    mode: 'production',
    entry: path.join(__dirname, '../src/index'),
    optimization: {
        minimize: true,
        minimizer: [
            new TerserPlugin({
                terserOptions: {
                    compress: {
                        drop_console: true, // 移除 console
                    },
                },
            }),
        ],
    },
    output: {
        // filename: pathData => {
        //     console.log('==>pathData.filename', pathData.chunk.name);
        //     return pathData.chunk.name === 'main' ? 'index.js' : '[name].[contenthash:6].js';
        // },
        filename: 'index.js',
        path: path.resolve(__dirname, '../dist'),
        library: 'cheetahCapture',
        libraryTarget: 'umd',
        publicPath: '/',
    },
    resolve: {
        modules: ['node_modules', resolve('src')],
        extensions: ['.ts', '.js'],
    },
    module: moduleConfig,
}, {
    mode: 'production',
    entry: path.join(__dirname, '../src/capture.worker.ts'),
    output: {
        // filename: pathData => {
        //     console.log('==>pathData.filename', pathData.chunk.name);
        //     return pathData.chunk.name === 'main' ? 'index.js' : '[name].[contenthash:6].js';
        // },
        filename: 'capture.worker.js',
        path: path.resolve(__dirname, '../dist'),
        // library: 'wasm-capture',
        // libraryTarget: 'umd',
        publicPath: '/',
    },
    resolve: {
        modules: ['node_modules', resolve('src')],
        extensions: ['.ts', '.js'],
    },
    module: moduleConfig,
    optimization,
}];
